<!DOCTYPE html>
<html class="no-js" lang="en" old-ng-app="ngResource" ng-app="app"> 


<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>Foundation 4</title>

  
  <link rel="stylesheet" href="css/foundation.css">
  <script src="js/vendor/custom.modernizr.js"></script>

  <script type="text/javascript" src="https://emea.salesforce.com/canvas/sdk/js/29.0/canvas-all.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular-resource.js"></script>
</head>

<body ng-controller="searchCtrl">

	<div class="row">
		<div class="large-8 columns">
			<h2>Search Salesforce Data with Solr</h2>
			<p>Salesforce data indexed into Solr heroku app</p>
			
			<h3>Search salesforce data using Solr</h3>
			<!-- Grid Example -->
			<div class="row" >
				<div class="large-12 columns">
				
					  <!-- SEARCH ROW -->
					  <div class="row collapse">
					    
					    <div class="small-9 large-10 columns">
					      <input style="height: 46px; font-size: 20px;" type="text" ng-model="searchparam.txt" placeholder="Search for...">
					    </div>
					    <div class="small-3 large-2 columns">
					      <button ng-click="search(searchparam)">Search</button>
					      <!-- <span class="prefix">search</span> -->
					    </div>
					  </div>

			
				<!-- ***************** DATA RESULTS ***************-->
				
				<div class="row" ng-repeat="o1 in data.res">
			        <div class="small-3 large-2 columns"><img src="http://placehold.it/80x80&amp;text=[img]"></div>
			        <div class="small-9 large-10 columns">
			          <p><strong>{[{o1.name}]}:</strong> {[{o1.type_s}]} {[{o1.phone_s}]} {[{o1.billingstate_s}]}</p>
			          <ul class="inline-list" >
			            <li><a ng-click="addRecord(o1)">Add</a></li>
			            <li><a href="">Share</a></li>
			          </ul>
			        </div>
			      </div>
			      <hr/>
				</div>	
				
				<!--
				<div class="large-12 columns">
					<table>
					  <thead>
					    <tr>
					      <th width="200">Name</th>
					      <th>Type</th>
					      <th width="150">Phone</th>
					      <th width="150">Billing State</th>
					    </tr>
					  </thead>
					  <tbody  id="addrows">
					    <tr ng-repeat="o1 in data.res">
					      <td><a ng-href="{{o1.id}}">{[{o1.name}]}</a></td>
					      <td>{[{o1.type_s}]}</td>
					      <td>{[{o1.phone_s}]}</td>
					      <td>{[{o1.billingstate_s}]}</td>
					    </tr>
					  </tbody>
					</table>
				</div>
				-->
			</div>
			
			
		</div>
		
		<div class="large-4 columns">
			
			<a href="http://localhost:8983/solr/#/collection1"><img src="http://lucene.apache.org/images/solr.png"/></a>
			
			<div class="panel" style="margin-top: 15px;">
				
				<!-- ***************** FILTERS SET ***************-->
		        <p style="margin-bottom:0;">Filter by:  ({[{data.totalrecords}]})</p>
		        
		        <div ng-repeat="filt in setfilters"><a class="label round alert" style="margin: 2px;" ng-click="rmFilter($index);  search(searchparam);">{[{filt.val}]}</a></div>
		        

				<!-- ***************** FACET RESULTS ***************-->
		        <span ng-repeat="(key1, fr) in data.facetresults">
			      <p style="margin-bottom:0;">{[{key1}]}</p>
			        <style> .hide { display: none; }</style>
			        <ul class="side-nav"  style="line-height:1; padding:0;">
				        <li ng-repeat="fieldfr in fr" class="ng-class-even: 'hide'" ><a ng-click="addFilter( {field: key1, val: fieldfr}); search(searchparam);">{[{fieldfr}]} ({[{fr[$index+1]}]})</a></li>
				    </ul>
				    <hr/>
				</span>
			 </div>
			 
			 <div class="panel" style="margin-top: 15px;">
			
				<!-- ***************** SELECTED RESULTS ***************-->
		        <h5>Target List</h5>

		        <ul class="side-nav" ng-repeat="sel in selected" style="line-height:1; padding:0;">
			        <li><a href="#">{[{sel.name}]}</a></li>
			    </ul>
				<button ng-click="insertSFDC()">Create Campaign</button>
			 </div>
		</div>
		<hr />
	</div>

	<div class="row">
		<div class="large-8 columns">
		
			<h3>1. Update Solr with Latest Accounts (this can be automated)</h3>
			 <!-- BUTTON ROW -->
			  <div class="row collapse">
			  	<button ng-click="getSFDCAccs()">Update Solr</button>
			  	<small ng-show="showerror" ng-class="error">{errorStr}</small>
			  </div>

			
			
			<h3>Manually Add Data From any Other Systems</h3>
			<!-- Grid Example -->
			<div class="row">
				<div class="large-12 columns">
									  
					  <!-- ADD ROW -->
					  <div class="row">
					    <div class="large-6 columns">
					      <div class="row collapse">
					        <div class="small-10 columns">
					          <input type="text" ng-model="acc.id" placeholder="Account ID">
					        </div>
					        <div class="small-2 columns">
					          <span class="prefix">id</a>
					        </div>
					      </div>
					    </div>
					    <div class="large-6 columns">
					      <div class="row collapse">
					        <div class="small-8 columns">
					          <input type="text" ng-model="acc.name" placeholder="Account Name">
					        </div>
					        <div class="small-4 columns">
					          <span class="prefix">name</a>
					        </div>
					      </div>
					    </div>
					    <div class="large-6 columns">
					      <div class="row collapse">
					        <div class="small-6 columns">
					          <input type="text" ng-model="acc.type_s" placeholder="Account Type">
					        </div>
					        <div class="small-6 columns">
					          <span class="postfix radius">type_s</span>
					        </div>
					      </div>
					    </div>
					    <div class="large-6 columns">
					      <div class="row collapse">
					        <div class="small-6 columns">
					          <input type="text" ng-model="acc.billingstate_s" placeholder="Account BillingState">
					        </div>
					        <div class="small-6 columns">
					          <span class="postfix radius">billingstate_s</span>
					        </div>
					      </div>
					    </div>
					  </div>
					  
					  <!-- BUTTON ROW -->
					  <div class="row collapse">
					  	<button ng-click="add(acc)">Add</button>
					  	
					  	<small ng-show="showerror" ng-class="error">{errorStr}</small>
					  </div>
				
				</div>
			</div>
		</div>
	</div>

	<script>
   		/*  load the 'ngResource' module in your application by adding it as a dependent module 
   		 *  ngResource INCLUDED IN THE BOOTSTRAP INSTREAD 
   		angular.module('app', ['ngResource']);
   		*/
   		
   		angular.module('app', ['ngResource']).config(function($interpolateProvider){
	        $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
	    });
   		
   		function searchCtrl( $resource, $scope) {
   			var data = {};
   			$scope.setfilters = [];
   			$scope.data = data;
   			$scope.selected = [];
   			
   			$scope.addFilter = function(rec1) {
   				console.log ('addFilter ' + rec1);
   				$scope.setfilters.push(rec1);
   			}
    		$scope.rmFilter = function(idx) {
   				console.log ('rmFilter ' + idx);  			
   				$scope.setfilters.splice( $scope.setfilters[idx] ,1);
   			}
   			
   			$scope.addRecord = function(rec1) {
   				$scope.selected.push(rec1);
   			}
   			
   			/* Initialisation */
	   		$scope.Search = $resource('/account/:accId', {accId:'@id'}, 
	   			{'saveall':  {method:'POST', isArray:true}});
			$scope.showerror = false; 
			
			/* data/action bindings */
			$scope.search = function (s) {
				if (s == null) s = {};
				if (s.txt == null) s.txt = "*";
				if (s.rows == null) s.rows = 50;
				//if (f != null) s.filters = JSON.stringify(f);
				s.filters = JSON.stringify($scope.setfilters);
				console.log ('searching for  ' + JSON.stringify(s));
				var res = $scope.Search.query(s, 
					/*Success */
					function (value, responseHeaders){
							
						console.log('Response docs ' + JSON.stringify(value[1]));
						console.log('Response facets ' + JSON.stringify(value[2]) );
						
						// Results
						if (value[1] != null) {
							data.res = value[1].docs;
						}
						
						// Facet
						console.log('found docs ' + value[1].numFound + ' documents');
						data.totalrecords = value[1].numFound
						if (value[2] != null) {
							data.facetresults = value[2].facet_fields;
						}

						
					}, 
					/* Error */
					function (httpResponse) {
					 	$scope.errorStr = 'Error ' + JSON.stringify( httpResponse);
					 	$scope.showerror = true;
					 	alert ($scope.errorStr);
					 } );
			}
			
			
			/* data/action bindings */
			$scope.add = function (s) {
				$scope.Search.saveall(s, 
								function (value, responseHeaders){
							console.log ('Add success : ' + JSON.stringify( value)) ;
						
						}, 
									  function (httpResponse) {
						 	$scope.errorStr = 'Error ' + JSON.stringify( httpResponse);
						 	$scope.showerror = true;
						 	alert ($scope.errorStr);
					 	} );

			}
		
		
			// Paste the signed request string into a JavaScript object for easy access.
			try {
				var sr = JSON.parse('{{{ signedreq }}}');
				// Reference the Chatter user's URL from Context.Links object.
				var chatterUsersUrl = sr.context.links.queryUrl + '?q=SELECT+id,name,type,billingstate,phone+from+Account';
				console.log (chatterUsersUrl);
				$scope.getSFDCAccs = function() {
					// Make an XHR call back to salesforce through the supplied browser proxy. 
					Sfdc.canvas.client.ajax(chatterUsersUrl, 
					    {client : sr.client,
					    success : function(data){
					    // Make sure the status code is OK.
					    if (data.status === 200) {
					        
					        console.log ("Updating  "  + data.payload.totalSize + 
					        " Accounts into Solr"); // Returned 2 users
					        
					        var pushtosolr = new Array();
					        for (var i = 0; i < data.payload.totalSize; i++) {
					        	var sfdcobj = data.payload.records[i];
					        	console.log (JSON.stringify (sfdcobj));
					        	var solrobj = {
						        	'id': sfdcobj.Id,
						        	'name' : sfdcobj.Name,
						        	'type_s' : sfdcobj.Type,
						        	'billingstate_s': sfdcobj.BillingState,
						        	'phone_s': sfdcobj.Phone};
				        		pushtosolr.push (solrobj);
					        }
					        $scope.add(pushtosolr);
					    }
					}});
				}
			} catch (e) { console.log ('no Signed Request'); }
			$scope.search ({txt: '*', rows: 0});
		}
	</script>

  <script>
  
  document.write('<script src=' +
  ('__proto__' in {} ? 'js/vendor/zepto' : 'js/vendor/jquery') +
  '.js><\/script>')
  
  </script>
  
  <script src="js/foundation.min.js"></script>  
  <script src="js/foundation/foundation.js"></script>
  <script src="js/foundation/foundation.alerts.js"></script>
  <script src="js/foundation/foundation.clearing.js"></script>
  <script src="js/foundation/foundation.cookie.js"></script>
  <script src="js/foundation/foundation.dropdown.js"></script>
  <script src="js/foundation/foundation.forms.js"></script>
  <script src="js/foundation/foundation.joyride.js"></script>
  <script src="js/foundation/foundation.magellan.js"></script>
  <script src="js/foundation/foundation.orbit.js"></script>
  <script src="js/foundation/foundation.reveal.js"></script>
  <script src="js/foundation/foundation.section.js"></script>
  <script src="js/foundation/foundation.tooltips.js"></script>
  <script src="js/foundation/foundation.topbar.js"></script>
  <script src="js/foundation/foundation.interchange.js"></script>
  <script src="js/foundation/foundation.placeholder.js"></script>
  <script src="js/foundation/foundation.abide.js"></script>  
  <script>
    $(document).foundation();
  </script>

</body>
</html>
